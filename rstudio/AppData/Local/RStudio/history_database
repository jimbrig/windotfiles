1635727242056:cdfs_df <- tibble::tribble(
1635727242057:~age, ~cdf,
1635727242058:12, 2.5,
1635727242058:24, 1.9,
1635727242058:36, 1.7,
1635727242059:48, 1.6,
1635727242059:60, 1.1,
1635727242059:72, 1.005,
1635727242060:84, 1.002,
1635727242060:96, 1.001
1635727242061:)
1635727311618:cdfs_interp <- approx(
1635727311619:cdfs_df$age, cdfs_df$cdf, xout = c(12:100), method = "linear"
1635727311619:) %>% tibble::as_tibble()
1635727316171:require(dplyr)
1635727316323:require(tidyr)
1635727316359:require(tibble)
1635727316371:require(stats)
1635727321978:library(magrittr)
1635727324772:cdfs_interp <- approx(
1635727324774:cdfs_df$age, cdfs_df$cdf, xout = c(12:100), method = "linear"
1635727324775:) %>% tibble::as_tibble()
1635727326386:View(cdfs_interp)
1635727436075:cdfs_interp <- approx(
1635727436076:cdfs_df$age, cdfs_df$cdf, xout = c(12:100), method = "linear"
1635727436077:) %>% tibble::as_tibble() %>%
1635727436077:dplyr::mutate(cdf = ifelse(is.na(.data$cdf), dplyr::lag(.data$cdf, n = 1) ^ 0.9, .data$cdf))
1635727484659:cdfs_interp <- approx(
1635727484659:cdfs_df$age, cdfs_df$cdf, xout = c(12:100), method = "linear"
1635727484660:) %>%
1635727484661:tibble::as_tibble() %>%
1635727484661:dplyr::mutate(
1635727484661:prev_cdf = dplyr::lag(cdf))
1635727493498:cdfs_interp <- approx(
1635727493499:cdfs_df$age, cdfs_df$cdf, xout = c(12:100), method = "linear"
1635727493499:) %>%
1635727493500:tibble::as_tibble() %>%
1635727493500:dplyr::mutate(
1635727493500:prev_cdf = dplyr::lag(.data$cdf))
1635727502330:library(rlang)
1635727533562:cdfs_interp <- approx(
1635727533562:cdfs_df$age, cdfs_df$cdf, xout = c(12:100), method = "linear"
1635727533563:) %>%
1635727533563:tibble::as_tibble() %>%
1635727533564:dplyr::mutate(
1635727533564:prev_cdf = dplyr::lag(.data$cdf, order_by = age)
1635727533565:)
1635727551946:cdfs_interp <- approx(
1635727551947:cdfs_df$age, cdfs_df$cdf, xout = c(12:100), method = "linear"
1635727551948:) %>%
1635727551948:tibble::as_tibble() %>%
1635727551948:dplyr::mutate(
1635727551949:prev_cdf = dplyr::lag(cdf, order_by = age)
1635727551949:)
1635727575232:View(cdfs_interp)
1635727609545:cdfs_interp <- approx(
1635727609546:cdfs_df$age, cdfs_df$cdf, xout = c(12:100), method = "linear"
1635727609547:) %>%
1635727609547:tibble::as_tibble() %>%
1635727609548:setNames(c("age", "cdf")) %>%
1635727609548:dplyr::mutate(
1635727609548:prev_cdf = dplyr::lag(cdf, order_by = age)
1635727609549:)
1635727611945:View(cdfs_interp)
1635727652994:cdfs_interp <- approx(
1635727652994:cdfs_df$age, cdfs_df$cdf, xout = c(12:100), method = "linear"
1635727652995:) %>%
1635727652995:tibble::as_tibble() %>%
1635727652996:setNames(c("age", "cdf")) %>%
1635727652996:dplyr::mutate(
1635727652996:prev_cdf = dplyr::lag(cdf, order_by = age),
1635727652997:cdf = ifelse(is.na(.data$cdf), dplyr::lag(.data$cdf, n = 1, order_by = .data$age) ^ 0.9, .data$cdf))
1635727654537:View(cdfs_interp)
1635727692299:cdfs_interp <- approx(
1635727692299:cdfs_df$age, cdfs_df$cdf, xout = c(12:100), method = "linear"
1635727692300:) %>%
1635727692300:tibble::as_tibble() %>%
1635727692300:setNames(c("age", "cdf")) %>%
1635727692301:dplyr::mutate(
1635727692301:prev_cdf = dplyr::lag(cdf, order_by = age),
1635727692302:cdf = ifelse(is.na(.data$cdf), dplyr::lag(.data$cdf, order_by = .data$age) ^ 0.9, .data$cdf))
1635727694528:View(cdfs_interp)
1635727723130:cdfs_interp <- approx(
1635727723130:cdfs_df$age, cdfs_df$cdf, xout = c(12:100), method = "linear"
1635727723131:) %>%
1635727723131:tibble::as_tibble() %>%
1635727723132:setNames(c("age", "cdf")) %>%
1635727723132:dplyr::mutate(
1635727723132:prev_cdf = dplyr::lag(cdf, order_by = age),
1635727723133:cdf = ifelse(is.na(.data$cdf), .data$prev_cdf ^ 0.9, .data$cdf)
1635727723133:)
1635727724641:View(cdfs_interp)
1635727801457:cdfs_interp <- approx(
1635727801458:cdfs_df$age, cdfs_df$cdf, xout = c(12:100), method = "linear"
1635727801458:) %>%
1635727801459:tibble::as_tibble() %>%
1635727801459:setNames(c("age", "cdf")) %>%
1635727801460:dplyr::mutate(
1635727801460:decay_factor = 0.9,
1635727801461:prev_cdf = dplyr::lag(cdf, order_by = age),
1635727801461:cdf = ifelse(is.na(.data$cdf), .data$prev_cdf ^ 0.9, .data$cdf)
1635727801461:)
1635727802912:View(cdfs_interp)
1635727868898:cdfs_interp <- approx(
1635727868898:cdfs_df$age, cdfs_df$cdf, xout = c(12:100), method = "linear"
1635727868899:) %>%
1635727868899:tibble::as_tibble() %>%
1635727868900:setNames(c("age", "cdf")) %>%
1635727868900:dplyr::mutate(
1635727868900:decay_factor = 0.9,
1635727868901:cdf = ifelse(is.na(.data$cdf), lag(.data$cdf, order_by = age), .data$cdf)
1635727868901:)
1635727870224:View(cdfs_interp)
1635727939049:cdfs_interp <- approx(
1635727939050:cdfs_df$age, cdfs_df$cdf, xout = c(12:100), method = "linear"
1635727939050:) %>%
1635727939050:tibble::as_tibble() %>%
1635727939051:setNames(c("age", "cdf")) %>%
1635727939051:dplyr::mutate(
1635727939052:decay_factor = 0.9,
1635727939052:cdf = ifelse(is.na(.data$cdf), lag(.data$cdf, order_by = age, default = 1), .data$cdf)
1635727939053:)
1635727940510:View(cdfs_interp)
1635727993272:cdfs_interp <- approx(
1635727993273:cdfs_df$age, cdfs_df$cdf, xout = c(12:100), method = "linear"
1635727993274:) %>%
1635727993274:tibble::as_tibble() %>%
1635727993274:setNames(c("age", "cdf")) %>%
1635727993275:dplyr::mutate(
1635727993275:decay_factor = 0.9,
1635727993275:cdf = ifelse(is.na(.data$cdf), ifelse(!is.na(lag(.data$cdf, order_by = age, default = 1)),
1635727993276:lag(.data$cdf, order_by = age, default = 1),
1635727993276:1), .data$cdf)
1635727993277:)
1635727994583:View(cdfs_interp)
1635728039008:small_ages <- tibble::tibble(age = c(1:12), cdf = rep(2.5, 12))
1635728040759:View(small_ages)
1635728067873:small_ages <- tibble::tibble(age = c(1:12), cdf = rep(NA_real_, 12))
1635728069135:View(small_ages)
1635728115394:small_ages <- tibble::tibble(age = c(1:12), cdf = rep(NA_real_, 12)) %>%
1635728115395:dplyr::mutate(
1635728115395:persistency = age/12,
1635728115396:factor = 1/persistency,
1635728115396:cdf = 2.5 * factor
1635728115396:)
1635728117063:View(small_ages)
1635728181311:library(ChainLadder)
1635728191720:pak::pakc("actuar", "ChainLadder"))
1635728193737:pak::pak("actuar", "ChainLadder"))
1635728199256:pak::pak(c("actuar", "ChainLadder"))
1635728211336:pak::pak("glue")
1635728216600:pak::pak("glue")
1635728224735:install.packages("glue")
1635728246527:pak::pak(c("actuar", "ChainLadder"))
1635728255031:install.packages(c("actuar", "ChainLadder"))
1635812956743:getOption(repos)
1635812958624:getOption("repos")
1636265525958:getOption("repos")
1636684051601:install.packages(c("akima", "ChainLadder", "conquer", "gert", "glue", "lmtest", "nloptr", "qs", "RcppArmadillo", "readr", "tibble", "uuid", "vroom", "xfun"))
1636684106356:getOption("repos")
1636684169268:install.packages("renv")
1636684195332:pak::pkg_deps("devtools")
1636684203285:install.packages("glue")
1636684211235:uninstall.packages("pak")
1636684215646:uninstall.package("pak")
1636684220564:remove.packages("[ak")
1636684222923:remove.packages("pak")
1636684228212:pak::cache_clean()
1636684246452:pacman::p_del("pak")
1636684264931:packagefinder::findPackage("sysreqs")
1636684314596:install.packages("dep")
1636684326316:packagefinder::findPackage("dep")
1636684346307:packagefinder::findPackage("sys")
1637029317060:library(pak)
1637029317074:library(pkgdepends)
1637029317087:library(purrr)
1637029317098:library(dplyr)
1637029320014:libs <- .libPaths()
1637029320272:user_lib <- libs[1]
1637029321048:user_pkgs <- fs::dir_ls(user_lib, type = "directory") %>% basename() %>% setdiff("_cache")
1637029321208:pkgs <- pkgdepends::lib_status("C:/Users/jimbrig/.R/lib/4.0", packages = user_pkgs)
1637029324488:user_pkgs <- fs::dir_ls(user_lib, type = "directory") %>% basename() %>% setdiff("_cache")
1637029324840:pkgs <- pkgdepends::lib_status("C:/Users/jimbrig/.R/lib/4.0", packages = user_pkgs)
1637029325583:pkgs_cran <- pkgs %>% filter(repository == "CRAN", !is.na(package)) %>% pull(package)
1637029326473:pkgs_gh <- pkgs %>% filter(remotetype == "github", !is.na(remotepkgref)) %>% pull(remotepkgref)
1637029344913:pkgs <- pkgdepends::lib_status("~/.config/R/lib/4.1", packages = user_pkgs)
1637029347083:pkgs_cran <- pkgs %>% filter(repository == "CRAN", !is.na(package)) %>% pull(package)
1637029347497:pkgs_gh <- pkgs %>% filter(remotetype == "github", !is.na(remotepkgref)) %>% pull(remotepkgref)
1637029354625:purrr::walk(pkgs_cran, pak::pak, ask = FALSE, upgrade = TRUE)
1637029386707:install.packages("pak", repos = "https://r-lib.github.io/p/pak/dev/")
1637029398706:library(pak)
1637029398864:library(pkgdepends)
1637029399007:library(purrr)
1637029399503:library(dplyr)
1637029400944:libs <- .libPaths()
1637029401119:user_lib <- libs[1]
1637029401514:user_pkgs <- fs::dir_ls(user_lib, type = "directory") %>% basename() %>% setdiff("_cache")
1637029401962:pkgs <- pkgdepends::lib_status("~/.config/R/lib/4.1", packages = user_pkgs)
1637029402351:pkgs_cran <- pkgs %>% filter(repository == "CRAN", !is.na(package)) %>% pull(package)
1637029402785:pkgs_gh <- pkgs %>% filter(remotetype == "github", !is.na(remotepkgref)) %>% pull(remotepkgref)
1637029403177:purrr::walk(pkgs_cran, pak::pak, ask = FALSE, upgrade = TRUE)
1637029650033:library(rsconnect) # pak::pak("rsconnect")
1637029650736:library(config)
1637029652224:# js <- jsonlite::read_json("R/jimbrig2011_shiny_client_secret.json")
1637029652225:conf <- config::get("shinyappsio", file = "~/.config/R/config.yml")
1637029654737:purrr::walk(names(conf), function(account) {
1637029654738:config <- conf[[account]]
1637029654738:command <- config$`setup-command`
1637029654739:eval(parse(text = command))
1637029654740:})
1637029681609:editsecrets()
1637029688463:editextras()
1637029691407:editextras
1637029773960:# open_repo <- jimstools::open_gh_repo
1637029773961:editrprof <- function() {
1637029773961:file.edit("~/.config/R/.Rprofile")
1637029773962:}
1637029773963:editrenv <- function() {
1637029773964:file.edit("~/.config/R/.Renviron")
1637029773965:}
1637029773966:editextras <- function() {
1637029773967:file.edit("~/.config/R/scripts/rprofile_extras.R")
1637029773967:}
1637029773968:editsecrets <- function() {
1637029773969:file.edit("~/.config/R/secrets/secrets.Renviron")
1637029773969:}
1637029773970:editshortcuts <- function() {
1637029773971:file.edit(getOption("shrtcts.path"))
1637029773972:}
1637029773973:reload_rstudio <- function() {
1637029773973:if (rstudioapi::isAvailable(version_needed = "1.2.1261")) {
1637029773974:invisible(rstudioapi::executeCommand("reloadUi", quiet = TRUE))
1637029773974:}
1637029773975:reload_r <- function() {
1637029773976:if (rstudioapi::isAvailable(version_needed = "1.2.1261")) {
1637029773976:invisible(rstudioapi::executeCommand("restartR",
1637029773977:quiet = TRUE))
1637029773978:}
1637029773978:detach_all_attached <- function() {
1637029773979:all_attached <-
1637029773980:paste("package:", names(utils::sessionInfo()$otherPkgs),
1637029773980:sep = "")
1637029773982:try({
1637029773982:suppressWarnings(invisible(
1637029773983:lapply(
1637029773984:all_attached,
1637029773985:detach,
1637029773986:character.only = TRUE,
1637029773987:unload = TRUE
1637029773988:)
1637029773988:))
1637029773989:}, silent = TRUE)
1637029773990:}
1637029773991:explorer <- function(path = getwd()) {
1637029773992:y <- gsub("/", "\\\\", path)
1637029773992:suppressWarnings({
1637029773993:invisible(shell(paste0("explorer ", y), intern = TRUE))
1637029773994:})
1637029773994:}
1637029773995:view_path <- function() {
1637029773996:writeLines(strsplit(Sys.getenv("PATH"), ";")[[1]])
1637029773997:}
1637029773998:search_gh <- function(s,
1637029773999:type = "all",
1637029773999:language = NULL,
1637029774000:topic = NULL,
1637029774001:user = NULL,
1637029774001:org = NULL) {
1637029774002:types <- c(
1637029774003:"all",
1637029774004:"repo",
1637029774004:"code",
1637029774005:"commit",
1637029774006:"issue",
1637029774007:"discussion",
1637029774007:"package",
1637029774008:"marketplace",
1637029774009:"topic",
1637029774009:"wiki",
1637029774010:"user"
1637029774011:)
1637029774011:match.arg(type, types)
1637029774012:type_query <-
1637029774013:ifelse(type == "all", "&ref=opensearch", paste0("&type=", type))
1637029774014:base_url <- "https://github.com/search?q="
1637029774015:lang_query <-
1637029774016:ifelse(is.null(language), "", paste0("+language%3A", language))
1637029774017:topic_query <-
1637029774018:ifelse(is.null(topic), "", paste0("+topic%3A", topic))
1637029774019:user_query <- ifelse(is.null(user), "", paste0("+user%3A", user))
1637029774020:org_query <- ifelse(is.null(org), "", paste0("org%3A", org))
1637029774021:query <-
1637029774023:paste0(s,
1637029774024:" ",
1637029774025:lang_query,
1637029774026:topic_query,
1637029774027:user_query,
1637029774027:org_query,
1637029774028:type_query)
1637029774029:url <- paste0(base_url, query)
1637029774030:utils::browseURL(url)
1637029774031:invisible(return(url))
1637029774032:}
1637029774033:search_ghr <- function(s, ...) {
1637029774033:search_gh(s, language = "R")
1637029774034:}
1637029774035:search_cran <- function(s, ...) {
1637029774036:browseURL(paste0("https://github.com/cran/", s))
1637029774036:}
1637029774037:sandbox <- function(rstudio = TRUE) {
1637029774038:path <- fs::path_home("Dev/sandbox")
1637029774038:if (rstudio) rstudioapi::filesPaneNavigate("~/Dev/sandbox") else explorer(path)
1637029774039:}
1637029864646:editsecrets()
1637029872054:Sys.getenv()
1637029949143:fs::dir_create("inst/database")
1637029952502:fs::dir_create("inst/api")
1637029955247:fs::dir_create("inst/app")
1637029958447:fs::dir_create("inst/templates")
1637029965806:fs::dir_create("inst/docs")
1637029970271:fs::dir_create("inst/config")
1637030013863:fs::file_create("inst/database/claims-db.sql")
1637030017038:fs::file_create("inst/database/claims-db.dbml")
1637030030294:fs::file_create("inst/database/Dockerfile")
1637030040439:fs::file_create("inst/api/Dockerfile")
1637030043981:fs::file_create("inst/api/plumber.R")
1637030054416:fs::file_create("inst/api/config.yml")
1637030064038:fs::file_create("inst/database/config.yml")
1637030074813:fs::file_create("inst/app/config.yml")
1637030078695:fs::file_create("inst/app/Dockerfile")
1637030083048:fs::file_create("inst/app/server.R")
1637030086150:fs::file_create("inst/app/ui.R")
1637030094485:fs::dir_create("inst/app/www")
1637030111550:fs::file_create("inst/app/www/styles.css")
1637030117821:fs::file_create("inst/app/www/custom.js")
1637030127884:fs::dir_create("inst/app/www/img")
1637030139311:fs::file_create("inst/app/www/img/placeholder.png")
1637030171166:fs::file_create("inst/app/.dockerignore")
1637030173588:fs::file_create("inst/api/.dockerignore")
1637030177207:fs::file_create("inst/database/.dockerignore")
1637030191798:fs::file_create("inst/docker-compose.yml")
1637030287173:pak::pak("dreamRs/addinit")
1637030299236:usethis::gh_token_help()
1637030302406:?usethis::gh_token_help()
1637030323989:gh::gh_whoami()
1637030348060:editrenv()
1637030359470:editsecrets()
1637030401757:gh::gh_whoami()
1637030412934:pak::pak("dreamRs/addinit")
1637030468333:reload_rstudio()
1637030485860:reload_r()
1637030543193:usethis::use_data_raw("claims")
1637030564126:usethis::use_data_raw("exposures")
1637030591060:usethis::use_data_raw("industry")
1637030694517:usethis::use_vignette("B-simulation-of-claims-data", "Simulation of Claims Data")
1637030719692:usethis::use_vignette("C-triangles", "Loss Development Triangles")
1637030739637:usethis::use_vignette("D-ldfs", "Loss Development Factors")
1637030996404:# simulate transactions on insurance claims
1637030996405:# transactions will include claim closures, payments and changes in case reserves
1637030996406:# this is all completely made up and does not accurately resemble actual claims
1637030996407:library(lubridate)
1637030996555:library(dplyr)
1637030996692:library(randomNames)
1637031024221:search_ghr("randomNames")
1637031043076:pak::pak("randomNames")
1637031055499:pak::pak("Ractuary/devtri")
1637031091798:usethis::use_r("utils")
1637031114691:source("R/utils.R")
1637031115467:# number of claims
1637031115468:n_claims <- 10000
1637031116003:# start/end dates & accident range
1637031116004:beg_date <- as.Date("2006-01-01")
1637031116146:end_date <- as.Date(end_of_month(beg_of_month(Sys.Date()) - 1))
1637031118251:accident_range <- as.numeric(end_date - beg_date)
1637031119764:set.seed(1234)
1637031121117:accident_date <- sample(0:accident_range, size = n_claims, replace = TRUE)
1637031121539:payment_fun <- function(n) rlnorm(n, 7.5, 1.5)
1637031123117:claims <- dplyr::data_frame(
1637031123117:claim_num = 1:n_claims,
1637031123118:claim_id = paste0("claim-", 1:n_claims),
1637031123119:accident_date = beg_date + lubridate::days(accident_date),
1637031123119:state = sample(c("TX", "CA", "GA", "FL"), size = n_claims, replace = TRUE),
1637031123120:claimant = randomNames::randomNames(n_claims),
1637031123121:report_date = rnbinom(n_claims, 5, .25),
1637031123122:# 0 if claim closed when reported
1637031123122:status = rbinom(n_claims, 1, 0.96),
1637031123123:# initial payment amount
1637031123124:payment =  payment_fun(n_claims)) %>%
1637031123124:dplyr::mutate(report_date = accident_date + report_date,
1637031123125:# set payment to zero if closed when reported
1637031123126:payment = ifelse(status == 0, 0, payment),
1637031123126:case = payment * runif(n_claims, 0.25, 8.0),
1637031123127:transaction_date = report_date) %>%
1637031123128:dplyr::arrange(accident_date)
1637031139197:library(tibble)
1637031141468:claims <- tibble::tibble(
1637031141469:claim_num = 1:n_claims,
1637031141470:claim_id = paste0("claim-", 1:n_claims),
1637031141471:accident_date = beg_date + lubridate::days(accident_date),
1637031141472:state = sample(c("TX", "CA", "GA", "FL"), size = n_claims, replace = TRUE),
1637031141472:claimant = randomNames::randomNames(n_claims),
1637031141473:report_date = rnbinom(n_claims, 5, .25),
1637031141474:# 0 if claim closed when reported
1637031141475:status = rbinom(n_claims, 1, 0.96),
1637031141476:# initial payment amount
1637031141477:payment =  payment_fun(n_claims)) %>%
1637031141478:dplyr::mutate(report_date = accident_date + report_date,
1637031141479:# set payment to zero if closed when reported
1637031141480:payment = ifelse(status == 0, 0, payment),
1637031141481:case = payment * runif(n_claims, 0.25, 8.0),
1637031141481:transaction_date = report_date) %>%
1637031141482:dplyr::arrange(accident_date)
1637031144613:## simulate transaction dates
1637031144614:# simulate number of transactions for each claim
1637031144614:n_trans <- rnbinom(n_claims, 3, 0.25)
1637031145476:# simulate lag to each transaction
1637031145476:trans_lag <- lapply(n_trans, function(x) rnbinom(x, 7, 0.1))
1637031145659:trans_lag <- lapply(trans_lag, function(x) {
1637031145660:if (length(x) == 0) 0 else x
1637031145661:})
1637031147076:for (i in seq_len(n_claims)) {
1637031147076:trans_lag[[i]] <- data_frame(
1637031147077:"trans_lag" = trans_lag[[i]],
1637031147078:"claim_id" = paste0("claim-", i),
1637031147078:"claim_num" = i
1637031147079:)
1637031147080:}
1637031184424:trans_tbl <- bind_rows(trans_lag) %>%
1637031184425:group_by(claim_id, claim_num) %>%
1637031184426:# switch from incremental to cumulative lag
1637031184426:mutate(trans_lag = cumsum(trans_lag)) %>%
1637031184427:ungroup()
1637031184577:# separate all zero claims from the claims that have payments
1637031184577:zero_claims <- dplyr::filter(claims, status == 0)
1637031184580:first_trans <- dplyr::filter(claims, status == 1)
1637031184583:subsequent_trans <- left_join(trans_tbl, first_trans, by = c("claim_num", "claim_id")) %>%
1637031184584:filter(!is.na(accident_date))
1637031184617:n_trans <- nrow(subsequent_trans)
1637031184619:# simulate subsequent transaction payments
1637031184620:subsequent_trans <- subsequent_trans %>%
1637031184621:mutate(payment = payment_fun(n_trans),
1637031184622:case = pmax(case * rnorm(n_trans, 1.5, 0.1) - payment, 500),
1637031184622:transaction_date = report_date + trans_lag) %>%
1637031184623:select(-trans_lag)
1637031184648:trans <- bind_rows(zero_claims, first_trans, subsequent_trans) %>%
1637031184650:arrange(transaction_date)
1637031184675:# add in a transaction number
1637031184676:trans$trans_num <- 1:nrow(trans)
1637031184677:# set final trans status to closed and case to 0
1637031184678:trans <- trans %>%
1637031184678:arrange(trans_num) %>%
1637031184679:group_by(claim_num, claim_id) %>%
1637031184680:mutate(final_trans = ifelse(trans_num == max(trans_num), TRUE, FALSE),
1637031184680:status = ifelse(final_trans, 0, 1),
1637031184681:case = ifelse(final_trans, 0, case),
1637031184682:status = ifelse(status == 0, "Closed", "Open"),
1637031184682:paid = round(cumsum(payment), 0),
1637031184683:case = round(case, 0),
1637031184684:payment = round(payment, 0)) %>%
1637031184685:select(-final_trans) %>%
1637031184686:arrange(accident_date) %>%
1637031184686:ungroup() %>%
1637031184687:# filter out any transactions past latest eval
1637031184688:filter(.data$transaction_date <= end_date)
1637031218219:fs::dir_create("data-raw/cache")
1637031220131:qs::qsave(trans, file = paste0("data-raw/cache/", Sys.Date(), "-transactional-claims.qs"))
1637031329395:library(memoise)
1637031388671:library(cachem)
1637031439002:fs::file_exists("data-raw/cache/*-transactional-claims.qs")
1637031470082:fs::file_exists("data-raw/cache/*.qs")
1637031528098:fs::dir_ls("data-raw/cache", type = "file", glob = "*.qs")
1637031538067:cached_file <- fs::dir_ls("data-raw/cache", type = "file", glob = "*.qs")[1]
1637031569786:claims_transactional <- qs::qread(cached_file)
1637031575697:View(claims)
1637031577530:View(claims_transactional)
1637031602210:usethis::use_data(claims_transactional, overwrite = TRUE)
1637031613251:pak::pak("docthis")
1637031618490:search_ghr("docthis")
1637031627499:pak::pak("mdlincoln/docthis")
1637031663665:docthis::doc_this(claims_transactional)
1637031668394:docthis::doc_this("claims_transactional")
1637031678337:doc <- docthis::doc_this("claims_transactional")
1637031709713:fs::file_create("R/data.R")
1637031710643:write(doc, file = "R/data.R", append = TRUE)
1637031786218:fs::file_create("data-raw/scripts/2-derive-lossruns.R")
1637031801521:library(lubridate)
1637031801522:library(dplyr)
1637031801523:library(randomNames)
1637031801537:library(devtri)
1637031801746:library(tidyr)
1637031819130:trans <- qs::qread("data-raw/cache/2021-11-15-transactional-claims.qs")
1637031845666:usethis::use_r("simulate_claims")
1637031853505:usethis::use_r("loss_run")
1637031872507:source("R/loss_run.R")
1637031876057:loss_data <- loss_run_all_evals(trans, merge = TRUE)
1637031990425:qs::qsave(loss_data, "data-raw/cache/lossruns.qs")
1637032027960:lossruns <- qs::qread("data-raw/cache/lossruns.qs")
1637032129370:usethis::use_data(lossruns, overwrite = TRUE)
1637032159158:docthis::doc_this("lossruns") |> write(file = "R/data.R", append = TRUE)
1637032214775:usethis::use_data_raw("triangles")
1637032231529:loss_data <- qs::qread("data-raw/cache/lossruns.qs")
1637032261695:usethis::use_r("triangles")
1637032269936:source("R/triangles.R")
1637032275769:tris <- purrr::map(c("paid", "reported", "case", "n_claims"),
1637032275769:function(x) { derive_triangles(loss_dat = loss_data, type = x, limit = NA) }) %>%
1637032275770:set_names(c("paid", "reported", "case", "n_claims"))
1637032280392:tris <- purrr::map(c("paid", "reported", "case", "n_claims"),
1637032280393:function(x) { derive_triangles(loss_dat = loss_data, type = x, limit = NA) }) %>%
1637032280394:rlang::set_names(c("paid", "reported", "case", "n_claims"))
1637032291280:qs::qsave(tris, "data-raw/cache/triangles.qs")
1637032313927:View(tris)
1637032327209:devtools::load_all(".")
1637032396832:rstudioapi::initializeProject()
1637032413745:shiny::runApp('shiny_app')
1637032447044:runApp('shiny_app')
1637032463719:pak::pak(ractuary/devtri)
1637032467263:pak::pak("ractuary/devtri")
1637032472471:library(pak)
1637032483609:pak::pak("ractuary/devtri")
1637032488123:# Library Packages --------------------------------------------------------
1637032488124:library(devtri) # remotes::install_github(ractuary/devtri)
1637032493304:# Library Packages --------------------------------------------------------
1637032493305:library(devtri) # remotes::install_github(ractuary/devtri)
1637032546963:shiny::runApp('shiny_app')
1637032577885:pak::pak("shinydashboard")
1637032580304:runApp('shiny_app')
1637032592303:pak::pak("shinycssloaders")
1637032595777:runApp('shiny_app')
1637032603838:pak::pak("polished")
1637032606923:runApp('shiny_app')
1637032759751:pak::pak("merlinoa/summaryrow")
1637032767029:runApp('shiny_app')
1637032943293:fs::file_create("inst/Notes.md")
1637033462668:fs::file_create("cliff.toml")
1637033480581:usethis::use_build_ignore("cliff.toml")
1637034352882:pak::pak("attachment")
1637034366705:attachment::att_amend_desc()
1637034437951:devtools::load_all(".")
1637034568385:usethis::use_pkgdown_github_pages()
1637287885564:installed.packages()
1637287905389:fs::dir_ls(.libPaths()[1])
1637287931618:dirname(fs::dir_ls(.libPaths()[1]))
1637287936548:basename(fs::dir_ls(.libPaths()[1]))
1637287944700:pkgs <- basename(fs::dir_ls(.libPaths()[1]))
1637287946150:pkgs
1637287952280:View(pkgs)
1637287985072:pak::lib_status()
1637288002709:pak::pkg_list()
1637288009930:pkgs_df <- pak::pkg_list()
1637288014020:View(pkgs_df)
1637288060114:dplyr::filter(pkgs_df, repository != "CRAN")
1637288068013:dplyr::filter(pkgs_df, repository != "CRAN") %>% dplyr::pull("package")
1637288077959:dplyr::filter(pkgs_df, repository != "CRAN") %>% dplyr::pull(package)
1637288094036:dplyr::filter(pkgs_df, is.na(repository)) %>% dplyr::pull(package)
1637288110318:dplyr::filter(pkgs_df, is.na(repository)) %>% dplyr::pull(remotePkgref)
1637288116148:dplyr::filter(pkgs_df, is.na(repository)) %>% dplyr::pull(remotepkgref
1637288117791:)
1637718941581:usethis::use_r("interpolate")
1637718978248:??devtri
1637718998951:devtri::dev_tri
1637719094334:devtri:::ata_tri
1637719298177:devtri:::cdf
1637719314291:library(devtri)
1637719317593:?cdf
1637719759940:attachment::att_amend_desc()
1637719821594:usethis::use_description_defaults()
1637719844339:usethis::use_description()
1637719858066:attachment::att_amend_desc()
1637719893668:attachment::create_dependencies_file(to = "inst/scripts/dependencies.R")
1637720258962:usethis::use_r("triangles")
1637720278517:usethis::use_test("triangle")
1637720340219:pak::pak("burglr")
1637720375772:pak::pak("moodymudskipper/burglr")
1637720393150:burglr::burgle(devtri::dev_tri)
1637720586223:#'   the start of a period (i.e. Accident Year)
1637720586225:#' @param age Numeric - Age of Development in Months
1637720586226:#' @param value Numeric - Value representing Paid Dollars,
1637720586227:#'   Incurred/Reported Dollars, or Claim Counts
1637720586228:#'
1637720586229:#' @return a [tibble::tibble()] structure with class "tri"
1637720586230:#' @export
1637720586231:#'
1637720586232:#' @examples
1637720586233:#' tri(2020, 12, 50000)
1637720586235:tri <- function(origin, age, value) {
1637720587562:#'   the start of a period (i.e. Accident Year)
1637720587563:#' @param age Numeric - Age of Development in Months
1637720587564:#' @param value Numeric - Value representing Paid Dollars,
1637720587566:#'   Incurred/Reported Dollars, or Claim Counts
1637720587567:#'
1637720587569:#' @return a [tibble::tibble()] structure with class "tri"
1637720587570:#' @export
1637720587571:#'
1637720587573:#' @examples
1637720587574:#' tri(2020, 12, 50000)
1637720587575:tri <- function(origin, age, value) {
1637720592317:}
1637720595135:tri <- function(origin, age, value) {
1637720595137:tib <- tibble::tibble(origin = origin, age = age, value = value)
1637720595138:structure(tib, class = c("tri", class(tib)))
1637720595139:}
1637720600037:tri(2020, 12, 50000)
1637721008769:attachment::att_amend_desc()
1637721024657:attachment::create_dependencies_file(to = "inst/scripts/dependencies.R")
1637721146593:pkgdown::build_site()
1637721166498:devtools::install()
1637721179698:pkgdown::build_site()
1637737665684:typeof(tri)
1637737671509:tri(2020, 12, 50000)
1637737676116:x <- tri(2020, 12, 50000)
1637737680326:typeof(x)
1637737690452:attributes(x)
1637737730893:pak::pak("sloop")
1637737745030:sloop::ftype(tri)
1637737752212:?sloop::ftype
1637737778292:library(sloop)
1637737783644:s3_type(tri)
1637737795334:s3_class(tri)
1637737884973:as.tri <- function(df) { out <- tri(df); class(out) <- c("tri", class(out)); out }
1637737906221:as.tri.default <- function(df) { tri(df) }
1637737911373:s3_class(as.tri)
1637737923493:s3_class(NULL)
1637737927885:s3_class(logical())
1637737937341:s3_class(x)
1637737947606:x <- tri(2020, 12, 50000)
1637737958188:ftype(print)
1637737966265:ftype(as.tri)
1637737971245:ftype(tri)
1637738250128:tibble::tibble
1637738422790:tibble::new_tibble
1637738609479:tri_dat <- x
1637738614425:tri_dat_new <- tibble::new_tibble(tri_dat, class = "tri")
1637738616664:View(tri_dat_new)
1637738700872:val_type <- "paid"
1637738708704:val_type <- ifelse(is.null(val_type), "rept", val_type)
1637738756511:class(tri_dat_new$value) <- c(val_type, class(tri_dat_new$value))
1637738842370:origin_label = "AY"
1637738849097:origin_label = "AYE"
1637738859089:val_type = "rept"
1637738868481:age_unit <- "month"
1637738925417:class(tri_dat_new$origin) <- c(origin_label, class(tri_dat_new$origin))
1637738926595:class(tri_dat_new$age) <- c(age_unit, class(tri_dat_new$age))
1637738926969:class(tri_dat_new$value) <- c(val_type, class(tri_dat_new$value))
1637738969064:ChainLadder::as.triangle(tri_dat_new)
1637739002065:ChainLadder::as.triangle(tri_dat)
1637739015185:ChainLadder::as.triangle(x)
1637739051952:library(ChainLadder)
1637739058049:GenIns
1637739064217:plot(GenIns)
1637739073433:plot(GenIns, lattice=TRUE)
1637739090444:head(GenInsLong)
1637739096913:class(GenInsLong)
1637739103536:typeof(GenInsLong)
1637739145597:as.triangle
1637739214449:triangle
1637739447322:origin = integer(); age = integer(); value = numeric()
1637739450076:stopifnot(is.integer(origin), is.integer(age), is.numeric(value))
1637739452187:out <- tibble::new_tibble(list(origin = origin, age = age, value = value), class = "tri")
1637739454417:View(out)
1637739465083:class(out)
1637739501549:inherits(out, "tri")
1637739503379:stopifnot(inherits(out, "tri"))
1637739526366:new_tri <- function(origin = integer(), age = integer(), value = numeric()) {
1637739526368:stopifnot(is.integer(origin), is.integer(age), is.numeric(value))
1637739526369:out <- tibble::new_tibble(list(origin = origin, age = age, value = value), class = "tri")
1637739526370:stopifnot(inherits(out, "tri"))
1637739526371:out
1637739526373:}
1637739544012:new_tri(2020, 12, 10000)
1637739556444:class(2020)
1637739563660:class(1)
1637739567786:is.integer(1)
1637739571515:as.integer(1)
1637739578627:is.integer(as.integer(1))
1637739616221:new_tri <- function(origin = numeric(), age = numeric(), value = numeric()) {
1637739616223:stopifnot(is.numeric(origin), is.numeric(age), is.numeric(value))
1637739616224:out <- tibble::new_tibble(list(origin = origin, age = age, value = value), class = "tri")
1637739616226:stopifnot(inherits(out, "tri"))
1637739616227:out
1637739616229:}
1637739617315:new_tri(2020, 12, 10000)
1637739664916:new_tri(c(2020:2021), c(12,24), c(10000, 11000))
1637739685486:?new_tibble
1637739817052:y <- new_tri(c(2020:2021), c(12,24), c(10000, 11000))
1637739820227:class(y)
1637740722510:#' @description
1637740722511:#' `validate_tri()` checks a `tri()` object for internal consistency.
1637740722512:#'
1637740722513:#' @param tri `tri()` object
1637740722514:#'
1637740722515:#' @export
1637740722516:validate_tri <- function(tri) {
1637740722517:stopifnot(nrow(tri) > 0, ncol(tri) >= 3)
1637740722518:tri
1637740722519:}
1637740813460:devtools::load_all(".")
1637740826192:?new_tri
1637741004705:mytri2 <- new_tri(c(2020:2021), c(12,24), c(10000, 11000))
1637741021641:ChainLadder::triangle(mytri2)
1637741053937:ChainLadder::triangle(list("AYE" = c(2020:2021), "Age" = c(12,24), "Paid" = c(10000, 11000))
1637741056720:)
1637741069488:ChainLadder::as.triangle(mytri2)
1637741078603:View(mytri2)
1637741113681:class(GenIns)
1637741131729:class(GenInsLong)
1637741138708:class(mytri2)
1637741186746:as.triangle(mytri2, origin = "origin", dev = "age", "paid")
1637741202924:as.triangle(as.data.frame(mytri2), origin = "origin", dev = "age", "paid")
1637741245315:triangle(c(100, 150, 175, 110, 168, 115))
1637741320995:triangle("2020" = c(10000, 11000), "2019" = c(1320))
1637741464124:expand.grid(c(2021:2021), c(12, 24))
1637741477964:expand.grid(c(2020:2021), c(12, 24))
1637741571254:expand.grid(c(2020:2021), c(12, 24), stringsAsFactors = FALSE) |>
1637741571256:sort(1)
1637741589510:expand.grid(c(2020:2021), c(12, 24), stringsAsFactors = FALSE) |>
1637741589511:sort("Var1")
1637741665293:hold <- expand.grid(c(2020:2021), c(12, 24), stringsAsFactors = FALSE) |>
1637741665294:as.data.frame() |>
1637741665295:dplyr::arrange(.data[1])
1637741674422:hold <- expand.grid(c(2020:2021), c(12, 24), stringsAsFactors = FALSE) |>
1637741674423:as.data.frame() |>
1637741674424:dplyr::arrange(1)
1637741677233:View(hold)
1637741685188:hold <- expand.grid(c(2020:2021), c(12, 24), stringsAsFactors = FALSE) |>
1637741685190:as.data.frame() |>
1637741685191:dplyr::arrange(2)
1637741687497:View(hold)
1637741701109:hold <- expand.grid(c(2020:2021), c(12, 24), stringsAsFactors = FALSE) |>
1637741701110:as.data.frame() |>
1637741701111:dplyr::arrange(`Var1`)
1637741703199:View(hold)
1637741798685:out <- tibble::new_tibble(hold, class = "tri")
1637741888200:hold <- expand.grid(c(2020:2021), c(12, 24), stringsAsFactors = FALSE) |>
1637741888201:tibble::as_tibble() |>
1637741888202:dplyr::arrange(`Var1`)
1637741921677:hold <- expand.grid(c(2020:2021), c(12, 24), KEEP.OUT.ATTRS = FALSE, stringsAsFactors = FALSE) |>
1637741921679:tibble::as_tibble() |>
1637741921680:dplyr::arrange(`Var1`)
1637741958343:out <- tibble::new_tibble(list(origin = origin, age = age, value = value), class = "tri")
1637741986253:hold <- expand.grid(c(2020:2021), c(12, 24), KEEP.OUT.ATTRS = FALSE, stringsAsFactors = FALSE) |>
1637741986254:tibble::as_tibble() |>
1637741986255:setNames(c("origin", "age")) |>
1637741986256:dplyr::arrange(`Var1`)
1637742002697:hold <- expand.grid(c(2020:2021), c(12, 24), KEEP.OUT.ATTRS = FALSE, stringsAsFactors = FALSE) |>
1637742002698:tibble::as_tibble() |>
1637742002699:setNames(c("origin", "age")) |>
1637742002700:dplyr::arrange(origin, age)
1637742037399:out <- tibble::new_tibble(list(origin = origin, age = age, value = value), class = "tri")
1637742058055:out <- tibble::new_tibble(list(origin = origin, age = age, value = value), class = "tri") |>
1637742058056:dplyr::right_join(hold)
1637742060567:View(out)
1637742113453:origin = c(2020:2021); age = c(12, 24); value = c(10000, 11000)
1637742116498:stopifnot(is.numeric(origin), is.numeric(age), is.numeric(value))
1637742117688:hold <- expand.grid(c(2020:2021), c(12, 24), KEEP.OUT.ATTRS = FALSE, stringsAsFactors = FALSE) |>
1637742117689:tibble::as_tibble() |>
1637742117690:setNames(c("origin", "age")) |>
1637742117691:dplyr::arrange(origin, age)
1637742119042:out <- tibble::new_tibble(list(origin = origin, age = age, value = value), class = "tri") |>
1637742119043:dplyr::right_join(hold)
1637742121450:View(out)
1637742150191:out <- tibble::new_tibble(list(origin = origin, age = age, value = value), class = "tri") |>
1637742150192:dplyr::right_join(hold) |>
1637742150193:tidyr::pivot_wider(age)
1637742170823:out <- tibble::new_tibble(list(origin = origin, age = age, value = value), class = "tri") |>
1637742170824:dplyr::right_join(hold) |>
1637742170825:tidyr::pivot_wider(names_from = age, values_from = value)
1637742176145:View(out)
1637878104724:setwd("Dev/jimbrig")
1637878118972:usethis::create_package("Rdotfiles")
1637878195558:usethis::use_git()
1637878369119:# skaffold ----------------------------------------------------------------
1637878369119:c(
1637878369120:"inst/config",
1637878369121:"inst/templates",
1637878369121:"inst/examples",
1637878369122:"inst/scripts"
1637878369123:) |>
1637878369123:purrr::walk(fs::dir_create)
1637878420453:usethis::use_description()
1637878426291:usethis::use_roxygen_md()
1637878536441:usethis::use_github_actions()
1637878543498:usethis::use_github()
1637878566978:usethis::use_github_actions()
1637878580362:usethis::use_readme_rmd()
1637878633873:usethis::use_github_actions()
1637878649608:knitr::knit("README.Rmd")
1637878801775:file.edit("cliff.toml")
1637878891943:system2("git-cliff -o inst/CHANGELOG.md")
1637878959079:shell.exec("git-cliff -o inst/CHANGELOG.md")
1637878966503:system("git-cliff -o inst/CHANGELOG.md")
1637878991864:usethis::use_build_ignore("cliff.toml")
1637879015952:usethis::use_github_action("pkgdown")
1637879216080:system("git-cliff -o inst/CHANGELOG.md")
1637879277592:fs::file_create("inst/ROADMAP.md")
1637908573614:js <- jsonlite::read_json("R/jimbrig2011_shiny_client_secret.json")
1637908583870:editrenv()
1637908622854:editrprof()
1637908700939:Sys.getenv("test", unset = "test")
1637908708445:Sys.getenv("test")
1637908774245:names(s <- Sys.getenv())
1637908782141:head(s)
1637908787653:head(s, 12)
1637908801564:s[grep("^L(C|ANG)", names(s))]
1637908846253:Sys.getenv("R_LIBS")
1637908914892:??usethis
1637909136630:# Specify R_CONFIG_DIR access helper function:
1637909136631:r_config_dir <- function(append) {
1637909136631:file.path(Sys.getenv("R_CONFIG_DIR", unset = "~/.config/R"), append)
1637909136632:}
1637909145766:r_config_dir("secrets")
1637909795219:append = NULL; prompt = TRUE; ls = FALSE
1637909801162:# Specify R_CONFIG_DIR access helper function:
1637909801163:.rconfigdir <- Sys.getenv("R_CONFIG_DIR", unset = "~/.config/R")
1637909809940:.rconfigdir
1637909889842:exists(".rconfigdir")
1637909899009:environment(.rconfigdir)
1637909901666:environment(".rconfigdir")
1637909917243:get(.rconfigdir)
1637909922058:get(".rconfigdir")
1637910078586:search()
1637910093034:# Specify R_CONFIG_DIR access helper function:
1637910093034:.rconfigdir <- Sys.getenv("R_CONFIG_DIR", unset = "~/.config/R")
1637910098336:if (!exists(".rconfigdir")) { .rconfigdir <<- Sys.getenv("R_CONFIG_DIR", unset = "~/.config/R") }
1637910105674:if (is.null(append) && is.null(dir)) { dir(.rconfigdir) }
1637910110050:if (is.null(append)) file.path(.rconfigdir, append)
1637910125739:if (is.null(append) && is.null(prompt)) { dir(.rconfigdir) }
1637910479167:jimstools::get_rstudio_projects
1637910493655:jimstools::get_rstudio_projects()
1637910500920:jimstools::get_rstudio_projects
1637910535112:jimstools:::msg_info("a")
1637910597031:jimstools:::open_project
1637910687111:path <- file.path(.rconfigdir, append)
1637910693440:if (prompt) { ask <- utils::menu(dir(path), TRUE, title = "Select a Project to Open") }
1637910699350:path
1637910704526:.rconfigdir
1637910710320:.rconfigdir[1]
1637910721543:get(".rconfigdir")
1637910726367:append
1637910729624:file.path(.rconfigdir, append)
1637910753327:path <- file.path(.rconfigdir, ifelse(is.null(append, "", append)))
1637910761639:path <- file.path(.rconfigdir, ifelse(is.null(append), "", append))
1637910765301:path
1637910784774:if (prompt) { ask <- utils::menu(dir(path), TRUE, title = "Select a an object:") }
1637910800854:response <- if (prompt) { ask <- utils::menu(dir(path), TRUE, title = "Select a an object:") }
1637910809319:is.dir
1637910862534:file.info(path)
1637910872126:file.info(path)["isdir"]
1637910879221:file.info(path)[["isdir"]]
1637911074064:if (prompt) {
1637911074066:response <- utils::menu(dir(path), TRUE, title = "Select a an object:")
1637911074067:if (file.info(response)[["isdir"]]) {
1637911074068:if (ls) { return(dir(response)) } else { response <<- utils::menu(dir(response), TRUE) }
1637911074068:}
1637911086692:response
1637911115214:response <- utils::menu(dir(path), TRUE, title = "Select a an object:")
1637911121509:response
1637911126862:utils::menu(dir(path), TRUE, title = "Select a an object:")
1637911177470:path <- dir(path)[[response]]
1637911180704:path
1637911316069:if (prompt) {
1637911316071:response <- utils::menu(dir(path), title = "Select a an object:")
1637911316071:if (response != 0) { path <- dir(path)[[response]] }
1637911316072:if (file.info(path)[["isdir"]]) {
1637911316073:if (ls) { return(dir(path)) } else { path <- dir(path)[[utils::menu(dir(path))]] }
1637911316074:}
1637911332244:if (!exists(".rconfigdir")) { .rconfigdir <<- Sys.getenv("R_CONFIG_DIR", unset = "~/.config/R") }
1637911332717:path <- file.path(.rconfigdir, ifelse(is.null(append), "", append))
1637911333614:if (prompt) {
1637911333614:response <- utils::menu(dir(path), title = "Select a an object:")
1637911333615:if (response != 0) { path <- dir(path)[[response]] }
1637911333616:if (file.info(path)[["isdir"]]) {
1637911333617:if (ls) { return(dir(path)) } else { path <- dir(path)[[utils::menu(dir(path))]] }
1637911333617:}
1637911372285:file.info(path)
1637911467525:if (!exists(".rconfigdir")) { .rconfigdir <<- Sys.getenv("R_CONFIG_DIR", unset = "~/.config/R") }
1637911467893:path <- file.path(.rconfigdir, ifelse(is.null(append), "", append))
1637911480615:response <- utils::menu(dir(path), title = "Select a an object:")
1637911511918:if (response != 0) { path <- file.path(.rconfigdir, dir(path)[[response]]) }
1637911518021:if (file.info(path)[["isdir"]]) {
1637911518022:if (ls) { return(dir(path)) } else { path <- dir(path)[[utils::menu(dir(path))]] }
1637911518022:}
1637911623557:#' @param ls logical - `TRUE` to return file listing (i.e. `ls`);
1637911623558:#'   `FALSE` returns path string object (default)
1637911623558:#'
1637911623559:#' @return either a single character string representing the `R_CONFIG_DIR` path
1637911623560:#'   or a vector of specified directory's files and folders (see `ls` argument).
1637911623560:#' @export
1637911623561:#'
1637911623561:#' @examples
1637911623562:#' .rconfigdir <- Sys.getenv("R_CONFIG_DIR", unset = "~/.config/R")
1637911623563:#' r_config_dir("secrets/)
1637911623564:r_config_dir <- function(append = NULL, prompt = TRUE, ls = FALSE) {
1637911623564:if (!exists(".rconfigdir")) { .rconfigdir <<- Sys.getenv("R_CONFIG_DIR", unset = "~/.config/R") }
1637911623565:path <- file.path(.rconfigdir, ifelse(is.null(append), "", append))
1637911623567:if (prompt) {
1637911623568:response <- utils::menu(dir(path), title = "Select a an object:")
1637911623568:if (response != 0) { path <- file.path(.rconfigdir, dir(path)[[response]]) }
1637911623569:if (file.info(path)[["isdir"]]) {
1637911623570:if (ls) { return(dir(path)) } else { path <- dir(path)[[utils::menu(dir(path))]] }
1637911623571:}
1637911623572:if (is.null(append) && ls) { dir(path) }
1637911623572:file.path(path, append)
1637911623573:}
1637911629812:r_config_dir()
1637911746764:r_config_dir <- function(x) {
1637911746765:file.path(Sys.getenv("R_CONFIG_DIR", unset = "~/.config/R"), x)
1637911746766:}
1637911753805:r_config_dir("config")
1637911781180:r_config_dir <- function(...) {
1637911781181:file.path(Sys.getenv("R_CONFIG_DIR", unset = "~/.config/R"), c(...))
1637911781182:}
1637911798923:r_config_dir("config")
1637911806101:dir(r_config_dir("config"))
1637911819675:r_config_dir("config", "addinit_options.R")
1637911844435:r_config_dir <- function(...) {
1637911844436:file.path(Sys.getenv("R_CONFIG_DIR", unset = "~/.config/R"), ...)
1637911844437:}
1637911846699:r_config_dir("config", "addinit_options.R")
1637911861227:r_config_dir("secrets")
1637912065386:editextras()
1637912146329:r_config_dir("secrets")
1637912253114:r_config_dir
1637912306794:rm("r_config_dir")
1637912315314:rm(r_config_dir)
1637912319546:r_config_dir <- function(...) {
1637912319547:file.path(Sys.getenv("R_CONFIG_DIR", unset = "~/.config/R"), ...)
1637912319548:}
1637912326195:detach("r_config_dir")
1637912342386:rm("r_config_dir")
1637912491280:r_config_dir("secrets")
1637984519953:jimstools:::open_project()
1637984871216:fs::file_create("cliff.toml")
1637985124059:pak::pak("dep")
1637985144641:search_ghr(""dep)
1637985147905:search_ghr("dep")
1637985235998:# install.packages("devtools")
1637985235999:devtools::install_github("hadley/requirements")
1637985251499:devtools::install_github("r-hub/sysreqs")
1637985254203:remotes::install_github("mdneuzerling/getsysreqs")
1637985343739:remotes::install_github('cole-brokamp/dep')
1637985395603:dep::get_deps(rstudioapi::getActiveDocumentContext()["path"])
1637985432030:dep::get_deps(rstudioapi::getActiveDocumentContext()["contents"])
1637985438269:dep::get_deps()
1637985462700:rstudioapi::getActiveDocumentContext()
1637985467765:rstudioapi::getActiveDocumentContext("path")
1637985473661:rstudioapi::getActiveDocumentContext()[["path"]]
1637985483740:dep::get_deps(rstudioapi::getActiveDocumentContext()[["path"]])
1637985499100:pak::pak(dep::get_deps(rstudioapi::getActiveDocumentContext()[["path"]]))
1637985624126:# ensure have all necessary dependencies:
1637985624127:dep::get_deps(rstudioapi::getActiveDocumentContext()$path) |> setdiff(c("dep", "pak")) |> pak::pak()
1637985913006:# simulate transactions on insurance claims
1637985913007:# transactions will include claim closures, payments and changes in case reserves
1637985913008:# this is all completely made up and does not accurately resemble actual claims
1637985913009:library(lubridate)
1637985913350:library(dplyr)
1637985919338:::
1637985926735:# simulate transactions on insurance claims
1637985926736:# transactions will include claim closures, payments and changes in case reserves
1637985926737:# this is all completely made up and does not accurately resemble actual claims
1637985926737:library(lubridate)
1637985928950:library(dplyr)
1637985929453:library(tibble)
1637985929894:library(randomNames)
1637985933503:library(tidyr)
1637985935327:source("R/utils.R")
1637985937685:# number of claims
1637985937686:n_claims <- 10000
1637985943209:# start/end dates & accident range
1637985943210:beg_date <- as.Date("2015-01-01")
1637985944710:end_date <- as.Date(end_of_month(beg_of_month(Sys.Date()) - 1))
1637985946941:accident_range <- as.numeric(end_date - beg_date)
1637985947757:set.seed(1234)
1637985949598:accident_date <- sample(0:accident_range, size = n_claims, replace = TRUE)
1637985950646:payment_fun <- function(n) rlnorm(n, 7.5, 1.5)
1637985959765:claims <- tibble::tibble(
1637985959765:claim_num = 1:n_claims,
1637985959766:claim_id = paste0("claim-", 1:n_claims),
1637985959767:accident_date = beg_date + lubridate::days(accident_date),
1637985959768:state = sample(c("TX", "CA", "GA", "FL"), size = n_claims, replace = TRUE),
1637985959768:claimant = randomNames::randomNames(n_claims),
1637985959769:report_date = rnbinom(n_claims, 5, .25),
1637985959770:# 0 if claim closed when reported
1637985959771:status = rbinom(n_claims, 1, 0.96),
1637985959772:# initial payment amount
1637985959772:payment =  payment_fun(n_claims)) %>%
1637985959773:dplyr::mutate(report_date = accident_date + report_date,
1637985959774:# set payment to zero if closed when reported
1637985959775:payment = ifelse(status == 0, 0, payment),
1637985959776:case = payment * runif(n_claims, 0.25, 8.0),
1637985959777:transaction_date = report_date) %>%
1637985959778:dplyr::arrange(accident_date)
1637985961919:## simulate transaction dates
1637985961920:# simulate number of transactions for each claim
1637985961921:n_trans <- rnbinom(n_claims, 3, 0.25)
1637985962789:# simulate lag to each transaction
1637985962790:trans_lag <- lapply(n_trans, function(x) rnbinom(x, 7, 0.1))
1637985962957:trans_lag <- lapply(trans_lag, function(x) {
1637985962958:if (length(x) == 0) 0 else x
1637985962959:})
1637985963806:for (i in seq_len(n_claims)) {
1637985963807:trans_lag[[i]] <- data_frame(
1637985963808:"trans_lag" = trans_lag[[i]],
1637985963809:"claim_id" = paste0("claim-", i),
1637985963810:"claim_num" = i
1637985963810:)
1637985963811:}
1637985996901:trans_tbl <- bind_rows(trans_lag) %>%
1637985996902:group_by(claim_id, claim_num) %>%
1637985996903:# switch from incremental to cumulative lag
1637985996903:mutate(trans_lag = cumsum(trans_lag)) %>%
1637985996904:ungroup()
1637985997060:# separate all zero claims from the claims that have payments
1637985997060:zero_claims <- dplyr::filter(claims, status == 0)
1637985997063:first_trans <- dplyr::filter(claims, status == 1)
1637985997066:subsequent_trans <- left_join(trans_tbl, first_trans, by = c("claim_num", "claim_id")) %>%
1637985997067:filter(!is.na(accident_date))
1637985997085:n_trans <- nrow(subsequent_trans)
1637985997086:# simulate subsequent transaction payments
1637985997087:subsequent_trans <- subsequent_trans %>%
1637985997088:mutate(payment = payment_fun(n_trans),
1637985997088:case = pmax(case * rnorm(n_trans, 1.5, 0.1) - payment, 500),
1637985997089:transaction_date = report_date + trans_lag) %>%
1637985997090:select(-trans_lag)
1637985997114:trans <- bind_rows(zero_claims, first_trans, subsequent_trans) %>%
1637985997115:arrange(transaction_date)
1637985997141:# add in a transaction number
1637985997142:trans$trans_num <- 1:nrow(trans)
1637985997144:# set final trans status to closed and case to 0
1637985997144:trans <- trans %>%
1637985997145:arrange(trans_num) %>%
1637985997146:group_by(claim_num, claim_id) %>%
1637985997146:mutate(final_trans = ifelse(trans_num == max(trans_num), TRUE, FALSE),
1637985997147:status = ifelse(final_trans, 0, 1),
1637985997148:case = ifelse(final_trans, 0, case),
1637985997148:status = ifelse(status == 0, "Closed", "Open"),
1637985997149:paid = round(cumsum(payment), 0),
1637985997150:case = round(case, 0),
1637985997151:payment = round(payment, 0)) %>%
1637985997152:select(-final_trans) %>%
1637985997154:arrange(accident_date) %>%
1637985997155:ungroup() %>%
1637985997156:# filter out any transactions past latest eval
1637985997157:filter(.data$transaction_date <= end_date)
1637987853367:pak::pak("mondate")
1637987864799:pak::pak("FinCal")
1637987943832:paid.devel.df <- data.frame(origin = c(1995, 1996, 1997, 1998, 1999,
1637987943833:2000, 2001, 2002, 2003, 2004, 2005,
1637987943834:2006, 1995, 1996, 1997, 1998, 1999,
1637987943835:2000, 2001, 2002, 2003, 2004, 2005,
1637987943836:1995, 1996, 1997, 1998, 1999, 2000,
1637987943837:2001, 2002, 2003, 2004, 1995, 1996,
1637987943838:1997, 1998, 1999, 2000, 2001, 2002,
1637987943839:2003, 1995, 1996, 1997, 1998, 1999,
1637987943839:2000, 2001, 2002, 1995, 1996, 1997,
1637987943840:1998, 1999, 2000, 2001, 1995, 1996,
1637987943841:1997, 1998, 1999, 2000, 1995, 1996,
1637987943842:1997, 1998, 1999, 1995, 1996, 1997,
1637987943842:1998, 1995, 1996, 1997, 1995, 1996,
1637987943843:1995),
1637987943844:dev = c(3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
1637987943845:3, 15, 15, 15, 15, 15, 15, 15, 15, 15,
1637987943846:15, 15, 27, 27, 27, 27, 27, 27, 27, 27,
1637987943847:27, 27, 39, 39, 39, 39, 39, 39, 39, 39,
1637987943848:39, 51, 51, 51, 51, 51, 51, 51, 51, 63,
1637987943849:63, 63, 63, 63, 63, 63, 75, 75, 75, 75,
1637987943850:75, 75, 87, 87, 87, 87, 87, 99, 99, 99,
1637987943851:99, 111, 111, 111, 123, 123, 135),
1637987943852:value = c(3, 1, 1, 1, 1, 1, 1, 1, 1, 4, 1,
1637987943852:1, 503, 465, 534, 329, 399, 328, 443,
1637987943853:401, 326, 524, 323, 2474, 2621, 2541,
1637987943854:2204, 2496, 1849, 2566, 3078, 2372,
1637987943854:2784, 3719, 4122, 3807, 3673, 4304,
1637987943855:3124, 4208, 5459, 4132, 4094, 4618,
1637987943856:4192, 4242, 5197, 3693, 5074, 6748,
1637987943857:4194, 4882, 4374, 4616, 5674, 3966,
1637987943858:5474, 4303, 4997, 4544, 4827, 6031,
1637987943858:4164, 4350, 5041, 4679, 5051, 6244,
1637987943859:4382, 5111, 4761, 5145, 4394, 5172,
1637987943860:4787, 4394, 5191, 4398))
1637988135487:pak::pak("simulationmachine")
1637988148913:remotes::install_github("kasaai/simulationmachine")
1637988193636:charm <- simulationmachine::simulation_machine(
1637988193637:num_claims = 50000,
1637988193638:lob_distribution = c(0.25, 0.25, 0.30, 0.20),
1637988193639:inflation = c(0.01, 0.01, 0.01, 0.01),
1637988193640:sd_claim = 0.85,
1637988193640:sd_recovery = 0.75
1637988193641:)
1637988200095:claim_history <- simulationmachine::conjure(charm, seed = 1234)
1637988227541:View(claim_history)
1637988327411:pak::pak("piggyback")
1637988347786:piggyback::pb_download("Autoseg2012B.zip",
1637988347788:repo = "kasaai/pc-pricing-tutorial",
1637988347791:dest = "data-raw",
1637988347793:overwrite = FALSE)
1637988391589:if (!dir.exists("data-raw/Autoseg2012B")) {
1637988391592:unzip(
1637988391594:file.path(download_dir, "Autoseg2012B.zip"),
1637988391597:exdir = file.path(download_dir, "Autoseg2012B")
1637988391600:)
1637988391603:}
1637988405918:if (!dir.exists("data-raw/Autoseg2012B")) {
1637988405920:unzip(
1637988405922:file.path("data-raw", "Autoseg2012B.zip"),
1637988405924:exdir = file.path("data-raw", "Autoseg2012B")
1637988405926:)
1637988405930:}
1638064363417:shiny::runApp()
1638066967477:cls
1638066969220:cls()
1638066971100:clear()
1638066975923:reload_rstudio()
1638067006357:Sys.getenv("R_HISTFILE")
1638067073115:reload_rstudio()
1638067077204:reload_r()
1638067122219:loadhistory("~/.config/R/.Rhistory")
1638067172388:jimstools::open_project()
1638067232840:require(attachment)
1638067232971:require(chameleon)
1638067349709:c(
1638067349710:"dplyr",
1638067349711:"magrittr",
1638067349711:"rlang",
1638067349712:"tibble",
1638067349713:"lubridate",
1638067349713:"purrr",
1638067349714:"actuar",
1638067349715:"ChainLadder",
1638067349715:"stringr"
1638067349716:) |>
1638067349717:purrr::walk(usethis::use_package)
1638067601067:fs::file_create("inst/scripts/dev_dependencies.R")
1638067708626:dev_deps <- c(
1638067708627:"devtools",
1638067708628:"usethis",
1638067708629:"testthat",
1638067708629:"roxygen2",
1638067708630:"knitr",
1638067708631:"rmarkdown",
1638067708631:"dplyr",
1638067708632:"tidyr",
1638067708633:"shiny",
1638067708633:"shinydashboard",
1638067708634:"shinyWidgets",
1638067708635:"lubridate",
1638067708635:"stringr",
1638067708636:"purrr",
1638067708638:"attachment",
1638067708638:"chameleon",
1638067708639:"addinit",
1638067708639:"assertive",
1638067708640:"assertthat",
1638067708641:"validate"
1638067708642:)
1638067753809:getwd(0)
1638067755369:getwd()
1638067763194:setwd("Dev/sandbox")
1638067785449:jimstools:::create_project("lossdevt")
1638067799625:jimstools:::create_rstudio_project("lossdevt", "lossdevt")
1638067822737:usethis::create_package("lossdevt")
1638067880119:c(
1638067880120:"devtools",
1638067880120:"usethis",
1638067880121:"pkgbuild",
1638067880122:"knitr",
1638067880122:"desc",
1638067880123:"attachment",
1638067880123:"pkgdown"
1638067880124:) |>
1638067880125:purrr::walk(library)
1638068289398:datasets <- c("ppauto", "wkcomp", "comauto", "medmal"
1638068289399:, "prodliab", "othliab")''
1638068291551:datasets <- c("ppauto", "wkcomp", "comauto", "medmal"
1638068291551:, "prodliab", "othliab")''
1638068301207:datasets <- c("ppauto", "wkcomp", "comauto", "medmal", "prodliab", "othliab")
1638068311375:URL.stem = "http://www.casact.org/research/reserve_data/"
1638068323023:stub <- datasets[[1]]
1638068328080:URL <- paste0(URL.stem, stub, "_pos.csv")
1638068334646:df <- readr::read_csv(URL, col_types = "iciiiddddddid")
1638068510390:usethis::use_rmarkdown_template(
1638068510392:"reserve_analysis",
1638068510392:"actuarial_templates",
1638068510393:"An RMarkdown Template for a Typical Actuarial Reserving Analysis",
1638068510394:TRUE
1638068510395:)
1638068557366:usethis::use_rmarkdown_template(
1638068557367:"Actuarial Reserve Analysis",
1638068557368:"actuarial_templates",
1638068557369:"An R-Markdown Template for a Typical Actuarial Reserving Analysis",
1638068557369:TRUE
1638068557370:)
1638068796645:lubridate::today()
1638068819388:??user
1638068831133:whoami::whoami()
1638068837341:whoami::username()
1638068847300:whoami::whoami("fullname")
1638068852829:whoami::whoami()["fullname"]
1638068858685:whoami::whoami()[["fullname"]]
1638069089541:usethis::use_r("utils-feedback")
1638069098879:devtools::load_all(".")
1638069132836:?feedback
1638069224515:usethis::use_r("utils-dates")
1638069503082:devtools::load_all(".")
1638069517651:?dates
1638069659692:devtools::load_all(".")
1638069662545:?dates
1638069690162:devtools::load_all(".")
1638069691442:?dates
1638069866659:devtools::load_all(".")
1638069867778:?dates
1638069908514:devtools::load_all(".")
1638069909646:?dates
1638070054536:usethis::use_testthat()
1638070069752:usethis::use_test("date-utils")
1638070129161:devtools::load_all(".")
1638070135041:attachment::att_amend_desc()
1638070138650:devtools::load_all(".")
1638070221806:?testthat::`testthat-package`
1638070297419:devtools::load_all(".")
1638070305238:end_of_month(as.Date("2019-02-05")
1638070308878:)
1638070316951:expect_equal(end_of_month(as.Date("2019-02-05")), as.Date("2019-02-28"))
1638070318872:test_that("end of month is correct (i.e. 30 versus 31 and 28 for February)", {
1638070318873:expect_equal(end_of_month(as.Date("2019-02-05")), as.Date("2019-02-28"))
1638070318874:})
1638070320527:test_that("start of month is correct", {
1638070320528:expect_equal(start_of_month(as.Date("2015-07-04")), as.Date("2015-07-01"))
1638070320529:})
1638070326230:expect_equal(end_of_month("2019-02-05"), as.Date("2019-02-28"))
1638070327215:expect_equal(start_of_month("2015-07-04"), as.Date("2015-07-01"))
1638070327774:expect_equal(end_of_month("2019/02/05"), as.Date("2019-02-28"))
1638070328743:expect_equal(start_of_month("2015/07/04"), as.Date("2015-07-01"))
1638070329590:expect_equal(end_of_month("February 5, 2019"), as.Date("2019-02-28"))
1638070366438:install.packages("flipTime")
1638070376190:search_ghr("flipTime")
1638070385975:pak::pak("Displayr/flipTime")
1638070439679:burglr::burgle(flipTime::AsDate)
1638070460527:devtools::load_all(".")
1638070622199:end_of_month("February 5, 2019")
1638070643569:devtools::load_all(".")
1638070646565:end_of_month("February 5, 2019")
1638070685325:flipTime:::fast_strptime
1638070693005:flipTime::AsDate()
1638070694414:flipTime::AsDate
1638070710444:flipTime::AsDate("February 20, 2018")
1638070810341:attachment::att_amend_desc()
1638070816644:end_of_month("February 5, 2019")
1638070818575:devtools::load_all(".")
1638070858765:start_of_month("July 7, 1999")
1638071018709:lubridate::as_date("February 16, 2020")
1638071666161:usethis::use_dev_package("Displayr/flipTime")
1638071673473:usethis::use_dev_package("flipTime")
1638071707985:usethis::use_dev_package("flipTime", remote = "Displayr/flipTime")
1638071720297:usethis::use_dev_package(remote = "Displayr/flipTime")
1638071726874:usethis::use_dev_package(remote = "github::Displayr/flipTime")
1638071738025:usethis::use_dev_package("flipTime", remote = "github::Displayr/flipTime")
1638071748347:devtools::load_all(".")
1638071781059:usethis::use_mit_license("Jimmy Briggs | 2021")
1638071841521:usethis::use_r("data_validation")
1638072130976:fs::dir_create("inst/extdata")
1638072139064:fs::dir_create("inst/testdat")
1638072237481:usethis::use_r("utils-data")
1638072390562:devtools::load_all(".")
1638072407430:attachment::att_amend_desc()
1638072417575:file.remove("NAMESPACE")
1638072419039:attachment::att_amend_desc()
1638072539296:devtools::load_all(".")
1638072546149:?data-utils
1638072550966:?`data-utils`
1638072636221:df <- data.frame(let = rep(letters, 2), num = rep(c(1:26), 2))
1638072639622:#' Pull Unique Values from a dataframe
1638072639623:#'
1638072639624:#' @param df a provided [data.frame()]
1638072639625:#' @param var character - quoted named of a variable from `df`
1638072639625:#'
1638072639626:#' @rdname data-utils
1638072639626:#' @export
1638072639627:pull_unique <- function(df, var){
1638072642814:df[[var]] %>%
1638072642815:unique() %>%
1638072642816:sort()
1638072642817:}
1638072647231:pull_unique <- function(df, var){
1638072647232:df[[var]] %>%
1638072647233:unique() %>%
1638072647233:sort()
1638072647235:}
1638072656149:pull_unique(df, 1)
1638072719478:pull_unique(df, "num")
1638072740949:usethis::use_test("data-utils")
1638072785069:test_that("pull_unique works", {
1638072785070:df <- data.frame(let = rep(letters, 2), num = rep(c(1:26), 2))
1638072785071:expect_equal(pull_unique(df, 1), letters)
1638072785072:})
1638072804763:usethis::use_readme_rmd()
1638072848941:usethis::use_coverage()
1638072918220:devtools::document()
1638073066557:c(
1638073066558:"zzz",
1638073066559:"utils-data",
1638073066559:"utils-dates",
1638073066560:"utils-feedback",
1638073066561:"triangles",
1638073066561:"validation",
1638073066562:"loss_run"
1638073066562:) |>
1638073066563:purrr::walk(usethis::use_r)
1638073111828:attachment::att_amend_desc()
1638073140772:c(
1638073140773:"zzz",
1638073140774:"utils-data",
1638073140775:"utils-dates",
1638073140775:"utils-feedback",
1638073140776:"actuary-triangles",
1638073140776:"actuary-validation",
1638073140777:"actuary-loss_run"
1638073140778:) |>
1638073140779:purrr::walk(usethis::use_r)
1638073266700:c(
1638073266701:"date-utils",
1638073266701:"data-utils",
1638073266702:"actuary-triangle",
1638073266703:"actuary-validation",
1638073266703:"actuary-loss_run"
1638073266704:) |>
1638073266705:purrr::walk(usethis::use_test)
1638073370315:usethis::use_dev_package("flipTime", remote = "Displayr/flipTime")
1638073665098:usethis::use_news_md()
1638073830898:attachment::find_remotes()
1638073834906:attachment::find_remotes(".")
1638073867393:attachment::create_dependencies_file(to = "inst/scripts/dependencies.R")
1638073881362:attachment::att_amend_desc(
1638073881363:extra.suggests = c("roxygen2", "devtools", "usethis", "desc", "attachment", "testthat", "pkgdown")
1638073881364:)
1638073883952:attachment::create_dependencies_file(to = "inst/scripts/dependencies.R")
1638073897418:usethis::use_pkgdown("pkgdown/_pkgdown.yml", destdir = "inst/docs")
1638073902443:pkgdown::clean_site()
1638073903289:pkgdown::build_site()
1638073977587:usethis::use_pkgdown("_pkgdown.yml", destdir = "docs")
1638074168264:usethis::use_pkgdown_github_pages()
1638074192193:pkgdown::clean_site()
1638074193207:pkgdown::build_site()
1638074229449:usethis::use_github_action_check_standard()
1638074232169:usethis::use_github_action("test-coverage")
1638074234041:knitr::knit("README.Rmd")
1638074256639:devtools::load_all()
1638074258769:devtools::document()
1638074266424:devtools::spell_check()
1638074296736:getOption(repos)
1638074298807:getOption("repos")
1638074314184:install.packages(c("callr", "spelling"))
1638074325386:devtools::load_all()
1638074355213:devtools::load_all()
1638074357849:devtools::document()
1638074360210:devtools::spell_check()
1638074362397:spelling::update_wordlist()
1638074386032:install.packages("checkhelper")
1638074395688:search_ghr("checkhelper")
1638074405081:remotes::install_github("thinkr-open/checkhelper")
1638074423368:globals <- checkhelper::get_no_visible() # remotes::install_github("thinkr-open/checkhelper")
1638074471147:globals_out <- paste0('"', unique(globals$globalVariables$variable), '"')
1638074471148:cat(globals_out, file = "R/globals.R", sep = "\n", append = TRUE)
1638074488929:devtools::load_all()
1638074492335:devtools::document()
1638074494288:devtools::check()
1638074546280:devtools::test()
1638074548752:devtools::lint()
1638075306894:usethis::tidy_labels()
1638075684742:usethis::use_github_labels(
1638075684743:# delete_default = TRUE,
1638075684743:labels = c("config", "release", "setup"), #,"data", "app", "api", "refactor"),
1638075684744:colours = c("config" = "#6A6CDE", "release" = "#12E943", "setup" = "#c5def5"), #, "data" = ""),
1638075684745:descriptions = c("config" = "Configuration and meta-infrastructural changes",
1638075684746:"release" = "Indicates a new release",
1638075684747:"setup" = "Related to setting up the project/package"),
1638075684747:rename = c("enhancement" = "feature")
1638075684749:)
1638075713571:usethis::use_github_labels(
1638075713572:# delete_default = TRUE,
1638075713573:labels = c("config", "release", "setup"), #,"data", "app", "api", "refactor"),
1638075713574:colours = NULL, #c("config" = "#6A6CDE", "release" = "#12E943", "setup" = "#c5def5"), #, "data" = ""),
1638075713574:descriptions = c("config" = "Configuration and meta-infrastructural changes",
1638075713575:"release" = "Indicates a new release",
1638075713576:"setup" = "Related to setting up the project/package"),
1638075713576:rename = c("enhancement" = "feature")
1638075713577:)
1638075987697:covr::codecov()
1638077055276:system("git-cliff -o NEWS.md")
1638077225837:chameleon::build_pkgdown(yml = "_pkgdown.yml", favicon = "pkgdown/favicon")
1638077239342:pak::pak("ThinkR-Open/chameleon")
1638077247630:search_ghr("chameleon")
1638077256356:pak::pak("ThinkR-open/chameleon")
1638077262416:.Last.error.trace
1638077268587:pak::cache_clean()
1638077271396:pak::cache_delete()
1638077273980:pak::cache_list()
1638077280771:pak::lib_status()
1638077284837:pak::pak("ThinkR-open/chameleon")
1638077322589:chameleon::build_pkgdown(yml = "_pkgdown.yml", favicon = "pkgdown/favicon")
1638077386435:install.packages("callr")
1638077400116:chameleon::build_pkgdown(yml = "_pkgdown.yml", favicon = "pkgdown/favicon")
1638077474644:covr::code_coverage()
1638077481171:covr::codecov()
1638077493940:covr::codecov
1638077614938:Sys.setenv('CODECOV_TOKEN'='6686f93e-5216-4ea0-94b7-d1899f0f5741')
1638077617028:covr::codecov
1638077618690:covr::codecov()
1638077636781:library(covr)
1638077646147:covr::file_report()
1638077692109:fs::file_create("codecov.yml")
1638077916443:pkgdown::deploy_site_github()
1638077931785:pkgdown::build_news()
1638078459641:chameleon::open_pkgdown_function()
1638080418509:usethis::use_coverage()
1638080528941:usethis::use_github_action("test-coverage")
1638080636783:fs::file_create("cliff.toml")
1638080643323:system("git-cliff -i")
1638080658308:system("git-cliff -o inst/CHANGELOG.md")
1638080806458:system("git-cliff -o NEWS.md")
